Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = id: 10000
ii. Hours = business_id: 1562
iii. Category = business_id: 2643
iv. Attribute = business_id: 1115
v. Review = business_id: 8090, id: 10000, user_id: 9581
vi. Checkin = business_id: 493
vii. Photo = id: 10000, photo: 6493
viii. Tip = user_id: 537, business_id: 3979
ix. User = id: 10000
x. Friend = user_id: 11
xi. Elite_years = user_id: 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:
SELECT COUNT(*)
FROM user
WHERE id IS NULL
OR name IS NULL
OR review_count IS NULL
OR yelping_since IS NULL
OR useful IS NULL
OR funny IS NULL
OR cool IS NULL
OR fans IS NULL
OR average_stars IS NULL
OR compliment_hot IS NULL
OR compliment_more IS NULL
OR compliment_profile IS NULL
OR compliment_cute IS NULL
OR compliment_list IS NULL
OR compliment_note IS NULL
OR compliment_plain IS NULL
OR compliment_cool IS NULL
OR compliment_funny IS NULL
OR compliment_writer IS NULL
OR compliment_photos IS NULL;
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5   	avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:1.0		max:5.0		avg:3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:0            max:2		avg:0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg:1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000	avg:24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
SELECT city,SUM(review_count) AS NUM
FROM business
GROUP BY city
ORDER BY NUM desc
	
	Copy and Paste the Result Below:
+-----------------+-------+
| city            |   NUM |
+-----------------+-------+
| Las Vegas       | 82854 |
| Phoenix         | 34503 |
| Toronto         | 24113 |
| Scottsdale      | 20614 |
| Charlotte       | 12523 |
| Henderson       | 10871 |
| Tempe           | 10504 |
| Pittsburgh      |  9798 |
| Montréal        |  9448 |
| Chandler        |  8112 |
| Mesa            |  6875 |
| Gilbert         |  6380 |
| Cleveland       |  5593 |
| Madison         |  5265 |
| Glendale        |  4406 |
| Mississauga     |  3814 |
| Edinburgh       |  2792 |
| Peoria          |  2624 |
| North Las Vegas |  2438 |
| Markham         |  2352 |
| Champaign       |  2029 |
| Stuttgart       |  1849 |
| Surprise        |  1520 |
| Lakewood        |  1465 |
| Goodyear        |  1155 |
+-----------------+-------+
(Output limit exceeded, 25 of 362 total rows shown)
	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

select SUM(review_count) AS Numbers
,stars
from business
where city = "Avon"
group by stars;

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+---------+-------+
| Numbers | stars |
+---------+-------+
|      10 |   1.5 |
|       6 |   2.5 |
|      88 |   3.5 |
|      21 |   4.0 |
|      31 |   4.5 |
|       3 |   5.0 |
+---------+-------+

ii. Beachwood

SQL code used to arrive at answer:

select SUM(review_count) AS Numbers
,stars
from business
where city = "Beachwood"
group by stars;


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+---------+-------+
| Numbers | stars |
+---------+-------+
|       8 |   2.0 |
|       3 |   2.5 |
|      11 |   3.0 |
|       6 |   3.5 |
|      69 |   4.0 |
|      17 |   4.5 |
|      23 |   5.0 |
+---------+-------+		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

SELECT review_count,name
FROM user
ORDER BY review_count desc
LIMIT 3
		
	Copy and Paste the Result Below:
+--------------+--------+
| review_count | name   |
+--------------+--------+
|         2000 | Gerald |
|         1629 | Sara   |
|         1339 | Yuri   |
+--------------+--------+		


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	No, not necessary correlated, for instance Amy who has most no. of  fans(503) has only 609 review counts on the other hand Yuri has only 76 fans, but has reviews more than Amy.So other factors are also taken into consideration. 
SQL code :
SELECT name,review_count,fans
FROM user
ORDER BY fans desc

Result :
+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Amy       |          609 |  503 |
| Mimi      |          968 |  497 |
| Harald    |         1153 |  311 |
| Gerald    |         2000 |  253 |
| Christine |          930 |  173 |
| Lisa      |          813 |  159 |
| Cat       |          377 |  133 |
| William   |         1215 |  126 |
| Fran      |          862 |  124 |
| Lissa     |          834 |  120 |
| Mark      |          861 |  115 |
| Tiffany   |          408 |  111 |
| bernice   |          255 |  105 |
| Roanna    |         1039 |  104 |
| Angela    |          694 |  101 |
| .Hon      |         1246 |  101 |
| Ben       |          307 |   96 |
| Linda     |          584 |   89 |
| Christina |          842 |   85 |
| Jessica   |          220 |   84 |
| Greg      |          408 |   81 |
| Nieves    |          178 |   80 |
| Sui       |          754 |   78 |
| Yuri      |         1339 |   76 |
| Nicole    |          161 |   73 |
+-----------+--------------+------+
(Output limit exceeded, 25 of 10000 total rows shown)
 

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: Yes, There are 1780 reviews with “love” and 232
reviews with “hate”.

	
	SQL code used to arrive at answer:
SELECT COUNT(*)
FROM review
WHERE text LIKE "%love%" 

Result:
+----------+
| COUNT(*) |
+----------+
|     1780 |
+----------+

select COUNT(*)
from review
where text LIKE "%hate%"

Result:
+----------+
| COUNT(*) |
+----------+
|      232 |
+----------+
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
SELECT name,fans
FROM user
ORDER BY fans desc
LIMIT 10;
	
	
	Copy and Paste the Result Below:
+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+
	
		

Part 2: Inferences and Analysis
1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
I picked Las Vegas and Shopping for this question.
i. Do the two groups you chose to analyze have a different distribution of hours?
Yes,The 4-5 star group seems to have shorter hours then the 2-3 star group. Since, the query returned only three businesses so not a great sample size.

ii. Do the two groups you chose to analyze have a different number of reviews?
Yes and no, one of the 4-5 star group has a lot more reviews but then the other 4-5 star group has close to the same number of reviews as the 2-3 star group
	         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
No, every business is in a different zip-code.

SQL code used for analysis:
SELECT B.name
,B.review_count
,H.hours
,postal_code
,CASE
WHEN hours LIKE "%monday%" THEN 1
WHEN hours LIKE "%tuesday%" THEN 2
WHEN hours LIKE "%wednesday%" THEN 3
WHEN hours LIKE "%thursday%" THEN 4
WHEN hours LIKE "%friday%" THEN 5
WHEN hours LIKE "%saturday%" THEN 6
WHEN hours LIKE "%sunday%" THEN 7
END AS ord,
CASE
WHEN B.stars BETWEEN 2 AND 3 THEN '2-3 stars'
WHEN B.stars BETWEEN 4 AND 5 THEN '4-5 stars'
END AS star_rating
FROM business B INNER JOIN hours H
ON B.id = H.business_id
INNER JOIN category C
ON C.business_id = B.id
WHERE (B.city == 'Las Vegas'
AND
C.category LIKE 'shopping')
AND
(B.stars BETWEEN 2 AND 3
OR
B.stars BETWEEN 4 AND 5)
GROUP BY stars,ord
ORDER BY ord,star_rating ASC

Result:
+--------------------------------+--------------+----------------------+-------------+-----+-------------+
| name                           | review_count | hours                | postal_code | ord | star_rating |
+--------------------------------+--------------+----------------------+-------------+-----+-------------+
| Walgreens                      |            6 | Monday|8:00-22:00    | 89121       |   1 | 2-3 stars   |
| Red Rock Canyon Visitor Center |           32 | Monday|8:00-16:30    | 89161       |   1 | 4-5 stars   |
| Desert Medical Equipment       |            4 | Monday|8:00-17:00    | 89118       |   1 | 4-5 stars   |
| Walgreens                      |            6 | Tuesday|8:00-22:00   | 89121       |   2 | 2-3 stars   |
| Red Rock Canyon Visitor Center |           32 | Tuesday|8:00-16:30   | 89161       |   2 | 4-5 stars   |
| Desert Medical Equipment       |            4 | Tuesday|8:00-17:00   | 89118       |   2 | 4-5 stars   |
| Walgreens                      |            6 | Wednesday|8:00-22:00 | 89121       |   3 | 2-3 stars   |
| Red Rock Canyon Visitor Center |           32 | Wednesday|8:00-16:30 | 89161       |   3 | 4-5 stars   |
| Desert Medical Equipment       |            4 | Wednesday|8:00-17:00 | 89118       |   3 | 4-5 stars   |
| Walgreens                      |            6 | Thursday|8:00-22:00  | 89121       |   4 | 2-3 stars   |
| Red Rock Canyon Visitor Center |           32 | Thursday|8:00-16:30  | 89161       |   4 | 4-5 stars   |
| Desert Medical Equipment       |            4 | Thursday|8:00-17:00  | 89118       |   4 | 4-5 stars   |
| Walgreens                      |            6 | Friday|8:00-22:00    | 89121       |   5 | 2-3 stars   |
| Red Rock Canyon Visitor Center |           32 | Friday|8:00-16:30    | 89161       |   5 | 4-5 stars   |
| Desert Medical Equipment       |            4 | Friday|8:00-17:00    | 89118       |   5 | 4-5 stars   |
| Walgreens                      |            6 | Saturday|8:00-22:00  | 89121       |   6 | 2-3 stars   |
| Red Rock Canyon Visitor Center |           32 | Saturday|8:00-16:30  | 89161       |   6 | 4-5 stars   |
| Walgreens                      |            6 | Sunday|8:00-22:00    | 89121       |   7 | 2-3 stars   |
| Red Rock Canyon Visitor Center |           32 | Sunday|8:00-16:30    | 89161       |   7 | 4-5 stars   |
+--------------------------------+--------------+----------------------+-------------+-----+-------------+
		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
The businesses that are open tend to have more reviews than ones that are closed on average.
		
			Open:   AVG(review_count) = 31.757
			Closed: AVG(review_count0 = 23.198        
         
ii. Difference 2:
The average star rating is higher for businesses that are open than businesses that are closed.
	
			Open:   AVG(stars) = 3.679
			Closed: AVG(stars) = 3.520         
         
         
SQL code used for analysis:

SELECT COUNT(DISTINCT(id)),
AVG(review_count),
SUM(review_count),
AVG(stars),
is_open
FROM business
GROUP BY is_open

Result:
+---------------------+-------------------+-------------------+---------------+---------+
| COUNT(DISTINCT(id)) | AVG(review_count) | SUM(review_count) |    AVG(stars) | is_open |
+---------------------+-------------------+-------------------+---------------+---------+
|                1520 |     23.1980263158 |             35261 | 3.52039473684 |       0 |
|                8480 |     31.7570754717 |            269300 | 3.67900943396 |       1 |
+---------------------+-------------------+-------------------+---------------+---------+

	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
Here I chose to study the preference among different types of food on yelp.          
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
I will pick several types of food including “Chinese”,”Mexican”,”Korean”,”French”,”Italian”,”Japanese” and
“Indian”. Then I will analyze their star ratings and number of reviews so that I can get some insights on which type of food is popular on yelp.                            
                  
iii. Output of your finished dataset:
+----------+----------------------+---------------+-------------------+-----------+
| category | Number_Of_Resturants |    AVG(stars) | AVG(review_count) | city      |
+----------+----------------------+---------------+-------------------+-----------+
| Korean   |                    7 |           4.5 |               8.0 | Toronto   |
| French   |                   12 |           4.0 |     135.083333333 | Las Vegas |
| Chinese  |                   13 | 3.76923076923 |     423.230769231 | Las Vegas |
| Mexican  |                   28 |         3.625 |              73.0 | Edinburgh |
| Italian  |                   13 | 3.53846153846 |     78.2307692308 | Montréal  |
| Indian   |                    6 |           3.5 |              32.0 | Aurora    |
| Japanese |                   20 |         3.475 |             22.85 | Toronto   |
+----------+----------------------+---------------+-------------------+-----------+         
         
iv. Provide the SQL code you used to create your final dataset:

SELECT c.category
,COUNT(b.name) AS Number_Of_Resturants
,AVG(stars)
,AVG(review_count)
,b.city
FROM (business b INNER JOIN hours h ON b.id = h.business_id)
INNER JOIN category c ON c.business_id = b.id
WHERE c.category IN
("Chinese","Mexican","French","Italian","Korean","Japanese","Indian")
GROUP BY c.category
ORDER BY AVG(stars) desc;